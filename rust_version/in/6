(define (even? x)
(if (= x 0) #t (odd? (- x 1))))

(define (odd? x)
(if (= x 0) #f (even? (- x 1))))

(print (even? 10000))

(macro (msquare x) (list '* x x))
(define (p x) (print x) x)
(print (msquare (msquare 5)))

(define (let*-expander vars body)
      (if (null? vars) (cons 'begin body) (list 'let (list (car vars)) (let*-expander (cdr vars) body))))

(macro (let** vars . body) (let*-expander vars body))
(let** ((x 2) (y 3)) (+ x y))
